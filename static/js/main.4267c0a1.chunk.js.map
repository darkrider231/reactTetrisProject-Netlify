{"version":3,"sources":["gameHelpers.js","img/bgimg.png","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyedDisplay.js","components/Display.js","components/StartButton.js","audio/brassorchidbobbyrichards.mp3","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","P","C","G","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","console","log","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","counter","setCounter","isActive","setIsActive","timer","setInterval","clearInterval","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","delay","savedCallback","useRef","current","id","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","audio","sounds","Audio","play","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4267c0a1.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // THIS IS SLOWER!!!\n  // return player.tetromino.some((row, y) =>\n  //   row.some((cell, x) => {\n  //     if (cell !== 0) {\n  //       return (\n  //         !stage[y + player.pos.y + moveY] ||\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n  //           'clear'\n  //       );\n  //     }\n  //     return false;\n  //   })\n  // );\n\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};","export default __webpack_public_path__ + \"static/media/bgimg.f3ed2ffe.png\";","import styled from 'styled-components';\n// BG Image\nimport bgImage from '../../img/bgimg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n  h1 {\n      width: 20px;\n      height: 20px;\n  }\n`;","// Tetris Pieces\n\nexport const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0' },\n    I: {\n        shape: [\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0],\n            [0, 'I', 0, 0]\n        ],\n        color: '80, 227, 230',\n    },\n    J: {\n        shape: [\n            [0, 'J', 0],\n            [0, 'J', 0],\n            ['J', 'J', 0]\n        ],\n        color: '36, 95, 223',\n    },\n    L: {\n        shape: [\n            [0, 'L', 0],\n            [0, 'L', 0],\n            [0, 'L', 'L']\n        ],\n        color: '223, 173, 36',\n    },\n    O: {\n        shape: [\n            ['O', 'O'],\n            ['O', 'O'],\n        ],\n        color: '223, 217, 36',\n    },\n    S: {\n        shape: [\n            [0, 'S', 'S'],\n            ['S', 'S', 0],\n            [0, 0, 0]\n        ],\n        color: '48, 211, 56',\n    },\n    T: {\n        shape: [\n            [0, 0, 0],\n            ['T', 'T', 'T'],\n            [0, 'T', 0]\n        ],\n        color: '132, 61, 198',\n    },\n    Z: {\n        shape: [\n            ['Z', 'Z', 0],\n            [0, 'Z', 'Z'],\n            [0, 0, 0]\n        ],\n        color: '227, 78, 78',\n    },\n    P: {\n        shape: [\n            [0, 'P', 0],\n            ['P', 'P', 'P'],\n            [0, 'P', 0]\n        ],\n        color:'255, 255, 255',\n    },\n    C: {\n        shape: [\n            [0, 'C', 0],\n            [0, 'C', 0],\n            [0, 0, 0]\n        ],\n        color: '255, 153, 255'\n    },\n    G: {\n        shape: [\n            ['G', 0, 0],\n            ['G', 'G', 'G'],\n            [0, 0, 'G']\n        ],\n        color: '0, 25, 51'\n    }\n}\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZPCG';\n    const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n    return TETROMINOS[randTetromino];\n}\nexport default TETROMINOS;","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we got some score if collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Here are the updates\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  /* border-radius: 5px; */\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\n\nconst Cell = ({ type }) => (\n   <StyledCell type={type} color={TETROMINOS[type].color} >{console.log(\"rerender\")}</StyledCell>\n)\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n\n    </StyledStage>\n)\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  text-align: center;\n \n`;","import React from 'react';\nimport {StyledDisplay } from './styles/StyedDisplay';\n\n\nconst Display = ({ gameOver,  text }) => (\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n  \n);\n\nexport default StartButton;","export default __webpack_public_path__ + \"static/media/brassorchidbobbyrichards.205c12f1.mp3\";","import React, { useEffect, useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport sounds from './../audio/brassorchidbobbyrichards.mp3';\n\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [counter, setCounter] = useState(300);\n  const [isActive, setIsActive] = useState(false);\n\n\n  // Timer Countdown\n  useEffect(() => {\n    if (counter > 0 && isActive) {\n      const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n      return () => clearInterval(timer);\n    } else if (counter === 0) {\n      setGameOver(true);\n      setDropTime(null);\n    }\n  }, [counter, isActive]);\n\n  // Play Audio\n  function playAudio(audio) {\n    if(!isActive) {\n    const soundEffect = new Audio(audio);\n    soundEffect.play();\n    } \n\n  }\n\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n    setCounter(300);\n    setIsActive(true);\n    playAudio(sounds);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    // We don't need to run the interval when we use the arrow down to\n    // move the tetromino downwards. So deactivate it for now.\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  return (\n\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text={`Game Over! FINAL SCORE: ${score}`} />\n          ) : (\n              <div>\n                <Display text={`Score: ${score}`} />\n                <Display text={`rows: ${rows}`} />\n                <Display text={`Level: ${level}`} />\n                <Display text={`Time:  ${counter}`} />\n              </div>\n            )}\n          <StartButton onClick={counter ? !isActive : isActive} callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  function rotate(matrix, dir) {\n    // Make the rows to become cols (transpose)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotaded matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  // eslint-disable-next-line\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n\n  <div className=\"App\">\n   \n    <Tetris />\n    \n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n// eslint-disable-next-line\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}